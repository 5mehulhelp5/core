<?xml version='1.0'?>
<config
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="urn:magento:framework:Event/etc/events.xsd"
>
	<!--
		2016-07-28
		Цель обработчика — задействование в качестве результата сырого значения
		в том случае, когда сырое значение отсутствует в справочнике значений.
		Родительская реалиация работает так: если сырое значение отсутствует в справочнике значений,
		то родительская реализация возвращает пустую строку.

		Нас это не устраивает.
		Мы хотим возможности отображения в колонке «Payment Method»
		административной таблице заказов расширенного названия способа оплаты для заказов.
		Эти расширенные названия будут настраиваться моими конкретными платёжными модулями.
		Например, вместо «歐付寶 allPay» может отображаться «歐付寶 allPay (Bank Card)».

		В ядре в данном контексте сырым значением является код способа оплаты,
		например: «dfe_allpay».
		Далее ядро смотрит в справочнике, какое название соответствует коду «dfe_allpay»,
		и возвращает строку «歐付寶 allPay».

		В нашем же случае мы методом \Df\Payment\Observer\DataProvider\SearchResult::execute()
		запихнули в поле «payment_method» наших строк расширенное название наших способов оплаты
		(наприме, «歐付寶 allPay (Bank Card)»).

		Разумеется, такие значения отсутствуют в справочнике значений.
		Вот мы и хотим, чтобы в такой ситуации возвращалась не пустая строка, а сырое значение.
	-->
	<event name='df_column__prepare'>
		<observer
			name='Df\Payment\Observer\ColumnPrepare'
			instance='Df\Payment\Observer\ColumnPrepare'
		/>
	</event>
	<!--
		2016-07-28
		Цель обработчика — реализация возможности отображения в колонке «Payment Method»
		административной таблице заказов расширенного названия способа оплаты для заказов.
		Эти расширенные названия будут настраиваться моими конкретными платёжными модулями.
		Например, вместо «歐付寶 allPay» может отображаться «歐付寶 allPay (Bank Card)».
	-->
	<event name='df_data_provider__search_result'>
		<observer
			name='Df\Payment\Observer\DataProvider\SearchResult'
			instance='Df\Payment\Observer\DataProvider\SearchResult'
		/>
	</event>
	<!--
		2017-01-18
		Цель обработчика — сохранение для заказа, для которого был осуществлён частичный возврат,
		состояния «Processing» вместо состояние «Complete», которое норовит установить ядро:
		@see \Magento\Sales\Model\Order\Payment::refund()
			$orderState = $this->getOrderStateResolver()->getStateForOrder($this->getOrder());
			$this->getOrder()
				->addStatusHistoryComment(
					$message,
					$this->getOrder()->getConfig()->getStateDefaultStatus($orderState)
				)->setIsCustomerNotified($creditmemo->getOrder()->getCustomerNoteNotify());
		https://github.com/magento/magento2/blob/91aa307/app/code/Magento/Sales/Model/Order/Payment.php#L707-L712

		@see \Magento\Sales\Model\Order\StateResolver::getStateForOrder()
			if (!$order->isCanceled() && !$order->canUnhold()
				&& !$order->canInvoice() && !$order->canShip()
			) {
				if ($this->isOrderComplete($order)) {
					$orderState = Order::STATE_COMPLETE;
				} elseif ($this->isOrderClosed($order, $arguments)) {
					$orderState = Order::STATE_CLOSED;
				}
			}
		https://github.com/magento/magento2/blob/2.1.3/app/code/Magento/Sales/Model/Order/StateResolver.php#L84-L90
	-->
	<event name='sales_order_payment_refund'>
		<observer name='Df\Payment\Observer\Refund' instance='Df\Payment\Observer\Refund'/>
	</event>
	<!--
		2017-01-17
		Цель обработчика — закрытие заказов,
		для оплаты которых использовались мои платёжные модули,
		и для платежей которых была выполнена операция «Void».
		https://github.com/magento/magento2/blob/2.1.3/app/code/Magento/Sales/Model/Order/Payment.php#L567
	-->
	<event name='sales_order_payment_void'>
		<!--
			2017-01-17
			«Void» не является зарезервированным словом даже в PHP 7:
            http://php.net/manual/reserved.keywords.php
            http://php.net/manual/reserved.other-reserved-words.php
		-->
		<observer name='Df\Payment\Observer\Void' instance='Df\Payment\Observer\Void'/>
	</event>
</config>
